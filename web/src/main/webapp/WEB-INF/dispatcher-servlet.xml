<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:websocket="http://www.springframework.org/schema/websocket"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd




       http://www.springframework.org/schema/websocket
       http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <!--    <import resource="classpath:serviceSpringConfig.xml"/>-->

    <context:component-scan base-package="com.getjavajob.training.yarginy.socialnetwork.web"/>
    <!--    todo check why this doesn't work-->
    <!--    <bean class="com.getjavajob.training.yarginy.socialnetwork.web.configuration.WebConfig"/>-->

    <!--    <mvc:annotation-driven/>-->

    <!--    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
    <!--        <property name="maxUploadSize" value="16000000"/>-->
    <!--    </bean>-->

    <!--    <bean id="jspViewsResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--        <property name="prefix" value="/WEB-INF/jsps/"/>-->
    <!--        <property name="suffix" value=".jsp"/>-->
    <!--        <property name="order" value="1"/>-->
    <!--    </bean>-->

    <!--    <mvc:interceptors>-->
    <!--        </mvc:interceptor>-->
    <!--    </mvc:interceptors>-->

    <!--    <mvc:resources mapping="/webjars/**" location=""/>-->
    <!--    <mvc:resources mapping="/css/**" location="css"/>-->
    <!--    <mvc:resources mapping="/js/**" location="js"/>-->
    <!--    <mvc:resources mapping="/img/**" location="img"/>-->
    <!--    <mvc:resources mapping="/font/**" location="font"/>-->

    <!--    add prefix to all messages send to application-->
    <websocket:message-broker>
        <websocket:transport message-size="16000000" send-buffer-size="2000000" send-timeout="200000"/>
        <!--        stomp connection address-->
        <websocket:stomp-endpoint path="/dialog/connection" allowed-origins="*">
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <!--        filter clients subscriptions destinations by prefix-->
        <websocket:simple-broker prefix="/dialog"/>
    </websocket:message-broker>
</beans>